// STEP.1
id = "admin";
pw = "hyperdata1234!";

// CrpytoJS 라이브러리 필요
idEnc = CryptoJS.AES.encrypt(id, "tmax").toString();
pwEnc = CryptoJS.AES.encrypt(pw, "tmax").toString();

function setCookie(name, data, time) {
	var expires = '';
	if (time) {
		var date = new Date();
		date.setTime(date.getTime() + (time*1000));
		expires = '; expires=' + date.toUTCString();
	}	
	document.cookie = name + '=' + data + expires + '; path=/; SameSite=None; Secure';
}

// STEP.2
// rootURL 도메인 주소 정의 필요
$.ajax({
	url : rootURL + "/hyperdata/hd-auth/User",
	beforeSend : function(req) {
		req.setRequestHeader("Where", "Login");
	},
        dataType : 'json',
        type : 'GET',
        success : function(data) {
        	var list = data.dto.userInfoList;
                DR_User.DI_User = [];

                for (var i = 0; i < list.length; i++) {
                    DR_User.DI_User.push(list[i]);
        	}
        }
});

// STEP.3
$.ajax({
	type : "POST",
	dataType : "json",
	url : rootURL + "/hyperdata/hd-auth/Authenticate?action=Service", 
	data : JSON.stringify({
		dto : {
			"userId": idEnc, 
			"passwd":pwEnc
		}
	}),
	success : function(data) {
	// data는 서버로부터 전송받은 결과(JSON)이므로 바로 사용한다.
		if (data.dto.token.length > 0) {
	                for (var i = 0; i < DR_User.DI_User.length; i++) {
	                    if (DR_User.DI_User[i].userId === id) {
	        		setCookie('hd_access_token', data.dto.token, 3600);
				setCookie('hd_refresh_token', data.dto.refreshToken, 3600);
				setCookie('hd_access_user_id', id, 3600);
				setCookie('hd_access_user_uuid', DR_User.DI_User[i].uuid, 3600);
	                    }
	                }
			// HyperData 라우팅 주소
			window.location.href=rootURL + "/a"		
		}
	}, 
	error : function(e) {
		alert('서버 연결 도중 에러가 났습니다. 다시 시도해 주십시오.');
	}
});

